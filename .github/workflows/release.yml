name: Generate sing-box routing rules

on:
  workflow_dispatch:
  schedule:
    - cron: "15 1 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false

      - name: Set ENV variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_DATE=$(date +'%F %T %Z')" >> $GITHUB_ENV

      - name: Create release directory
        run: mkdir release

      - name: Generate geoip.db file
        run: |
          git clone https://github.com/Chocolate4U/sing-geoip.git
          cd sing-geoip
          go run -v .
          mv geoip*.db ../release

      - name: Generate geosite.db file
        run: |
          git clone https://github.com/Chocolate4U/sing-geosite.git
          cd sing-geosite
          go run -v .
          mv geosite*.db ../release

      - name: Generate sha256sum
        run: |
          sha256sum release/geoip.db > release/geoip.db.sha256sum
          sha256sum release/geoip-lite.db > release/geoip-lite.db.sha256sum
          sha256sum release/geosite.db > release/geosite.db.sha256sum
          sha256sum release/geosite-lite.db > release/geosite-lite.db.sha256sum
          
      - name: Generate Release Notes
        run: | 
          echo "* Updated on ${{ env.RELEASE_DATE }}" > RELEASE_NOTES
          echo "* Based on [Iran-v2ray-rules](https://github.com/Chocolate4U/Iran-v2ray-rules)" >> RELEASE_NOTES

      - name: Push assets to release branch
        run: |
          cd release || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Purge jsDelivr CDN cache
        run: |
          cd release || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          body_path: RELEASE_NOTES
          draft: false
          prerelease: false
          files: ./release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
